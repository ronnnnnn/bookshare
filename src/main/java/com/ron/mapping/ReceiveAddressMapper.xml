<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ron.mapper.ReceiveAddressMapper" >
  <resultMap id="BaseResultMap" type="com.ron.domain.ReceiveAddress" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
    <result column="full_address" property="fullAddress" jdbcType="VARCHAR" />
    <result column="postal_code" property="postalCode" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, receive_name, full_address, postal_code, mobile, phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from d_receive_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from d_receive_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ron.domain.ReceiveAddress" >
    insert into d_receive_address (id, user_id, receive_name, 
      full_address, postal_code, mobile, 
      phone)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{receiveName,jdbcType=VARCHAR}, 
      #{fullAddress,jdbcType=VARCHAR}, #{postalCode,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ron.domain.ReceiveAddress" >
    insert into d_receive_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="receiveName != null" >
        receive_name,
      </if>
      <if test="fullAddress != null" >
        full_address,
      </if>
      <if test="postalCode != null" >
        postal_code,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null" >
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="fullAddress != null" >
        #{fullAddress,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null" >
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ron.domain.ReceiveAddress" >
    update d_receive_address
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="receiveName != null" >
        receive_name = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="fullAddress != null" >
        full_address = #{fullAddress,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null" >
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ron.domain.ReceiveAddress" >
    update d_receive_address
    set user_id = #{userId,jdbcType=INTEGER},
      receive_name = #{receiveName,jdbcType=VARCHAR},
      full_address = #{fullAddress,jdbcType=VARCHAR},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>