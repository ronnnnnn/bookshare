<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ron.mapper.ItemMapper" >
  <resultMap id="BaseResultMap" type="com.ron.domain.Item" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="dang_price" property="dangPrice" jdbcType="DOUBLE" />
    <result column="product_num" property="productNum" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, product_id, product_name, dang_price, product_num, amount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from d_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from d_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ron.domain.Item" >
    insert into d_item (id, order_id, product_id, 
      product_name, dang_price, product_num, 
      amount)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{productName,jdbcType=VARCHAR}, #{dangPrice,jdbcType=DOUBLE}, #{productNum,jdbcType=INTEGER}, 
      #{amount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.ron.domain.Item" >
    insert into d_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="dangPrice != null" >
        dang_price,
      </if>
      <if test="productNum != null" >
        product_num,
      </if>
      <if test="amount != null" >
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="dangPrice != null" >
        #{dangPrice,jdbcType=DOUBLE},
      </if>
      <if test="productNum != null" >
        #{productNum,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ron.domain.Item" >
    update d_item
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="dangPrice != null" >
        dang_price = #{dangPrice,jdbcType=DOUBLE},
      </if>
      <if test="productNum != null" >
        product_num = #{productNum,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ron.domain.Item" >
    update d_item
    set order_id = #{orderId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      dang_price = #{dangPrice,jdbcType=DOUBLE},
      product_num = #{productNum,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>